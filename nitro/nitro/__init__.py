__version__ = "0.3.0"

import pandas
from openpyxl import Workbook
from openpyxl.styles import PatternFill, Alignment
from openpyxl.utils.dataframe import dataframe_to_rows

states = ["California", "Texas", "Florida", "New York"]
population = [39613493, 29730311, 21944577, 19299981]
dict_states = {"States": states, "Population": population}
df_population = pandas.DataFrame(
    columns=[
        "",
        "",
        "Position",
        241,
        670,
        2790,
        2832,
        3037,
        4184,
        4321,
        5389,
        8393,
        9344,
        9424,
        9534,
        9866,
        10029,
        10198,
        10447,
        10449,
        11537,
        12880,
        13195,
        14408,
        15240,
        15714,
        17410,
        18163,
        19955,
        20055,
        21618,
        21762,
        21846,
        21987,
        22200,
        22578,
        22673,
        22674,
        22679,
        22686,
        22688,
        22775,
        22786,
        22813,
        22882,
        22992,
        22995,
        23013,
        23040,
        23048,
        23055,
        23063,
        23075,
        23202,
        23403,
        23525,
        23599,
        23604,
        23854,
        23948,
        24130,
        24424,
        24469,
        24503,
        25000,
        25584,
        26060,
        26270,
        26530,
        26577,
        26709,
        26858,
        26259,
        27382,
        27383,
        27384,
        27807,
        28271,
        28311,
        28881,
        28882,
        28883,
        29510,
    ]
)

df_population.loc[0] = [
    "",
    "",
    "Reference",
    "C",
    "T",
    "C",
    "A",
    "C",
    "G",
    "C",
    "T",
    "G",
    "C",
    "A",
    "C",
    "C",
    "C",
    "C",
    "G",
    "C",
    "A",
    "C",
    "T",
    "C",
    "C",
    "C",
    "C",
    "A",
    "C",
    "A",
    "C",
    "C",
    "C",
    "G",
    "T",
    "G",
    "T",
    "C",
    "T",
    "C",
    "A",
    "G",
    "A",
    "G",
    "T",
    "G",
    "C",
    "A",
    "A",
    "G",
    "A",
    "A",
    "T",
    "C",
    "A",
    "C",
    "T",
    "C",
    "C",
    "G",
    "C",
    "A",
    "T",
    "C",
    "C",
    "C",
    "C",
    "C",
    "A",
    "C",
    "G",
    "C",
    "A",
    "G",
    "A",
    "T",
    "C",
    "A",
    "C",
    "G",
    "G",
    "G",
    "A",
]

df_population.loc[1] = [
    "",
    "",
    "Omicron / BA.1 / 21K",
    "T",
    "T",
    "C",
    "G",
    "T",
    "G",
    "C",
    "G",
    "A",
    "C",
    "A",
    "C",
    "C",
    "T",
    "C",
    "G",
    "A",
    "G",
    "C",
    "C",
    "T",
    "T",
    "C",
    "C",
    "G",
    "C",
    "A",
    "C",
    "T",
    "T",
    "G",
    "T",
    "A",
    "C",
    "T",
    "C",
    "T",
    "A",
    "G",
    "A",
    "G",
    "T",
    "A",
    "A",
    "C",
    "G",
    "A",
    "G",
    "T",
    "C",
    "A",
    "G",
    "T",
    "G",
    "A",
    "A",
    "T",
    "A",
    "T",
    "A",
    "T",
    "T",
    "T",
    "C",
    "T",
    "G",
    "G",
    "A",
    "C",
    "C",
    "G",
    "A",
    "T",
    "T",
    "T",
    "T",
    "A",
    "A",
    "C",
    "A",
]

df_population.loc[2] = [
    "",
    "",
    "Omicron / BA.2 / 21L",
    "T",
    "G",
    "T",
    "A",
    "T",
    "A",
    "T",
    "T",
    "G",
    "T",
    "G",
    "T",
    "T",
    "T",
    "T",
    "A",
    "A",
    "A",
    "T",
    "T",
    "T",
    "C",
    "T",
    "T",
    "G",
    "T",
    "G",
    "T",
    "C",
    "C",
    "A",
    "G",
    "A",
    "T",
    "T",
    "C",
    "T",
    "G",
    "A",
    "C",
    "T",
    "G",
    "A",
    "A",
    "C",
    "G",
    "G",
    "G",
    "T",
    "C",
    "C",
    "G",
    "T",
    "G",
    "A",
    "A",
    "T",
    "C",
    "T",
    "A",
    "C",
    "T",
    "T",
    "T",
    "T",
    "A",
    "G",
    "A",
    "T",
    "C",
    "C",
    "T",
    "C",
    "T",
    "T",
    "T",
    "A",
    "A",
    "C",
    "C",
]

df_population.loc[3] = [
    "Remarks",
    "Value",
    "MH-INSACOG-CSIR-NEERI947",
    "T",
    "G",
    "T",
    "A",
    "T",
    "A",
    "T",
    "T",
    "G",
    "T",
    "G",
    "T",
    "T",
    "T",
    "T",
    "A",
    "A",
    "A",
    "T",
    "T",
    "T",
    "C",
    "T",
    "T",
    "G",
    "T",
    "G",
    "T",
    "C",
    "C",
    "A",
    "G",
    "A",
    "T",
    "T",
    "C",
    "T",
    "G",
    "A",
    "C",
    "T",
    "G",
    "A",
    "A",
    "C",
    "G",
    "G",
    "G",
    "T",
    "C",
    "C",
    "G",
    "T",
    "G",
    "A",
    "A",
    "T",
    "C",
    "T",
    "A",
    "C",
    "T",
    "T",
    "T",
    "T",
    "A",
    "G",
    "A",
    "T",
    "C",
    "C",
    "T",
    "C",
    "T",
    "T",
    "T",
    "A",
    "A",
    "C",
    "C",
]

wb = Workbook()
ws = wb.active
ws.title = "BA.1 X BA.2"

for r in dataframe_to_rows(df_population, index=False, header=True):
    ws.append(r)


for rows in ws.iter_rows(min_row=1, max_row=5, min_col=4):
    for cell in rows:
        if cell.row == 1:
            cell.alignment = Alignment(
                textRotation=90, vertical="center", horizontal="center"
            )
        else:
            cell.alignment = Alignment(vertical="center", horizontal="center")

        if cell.row == 3:
            cell.fill = PatternFill(
                start_color="ef4444", end_color="ef4444", fill_type="solid"
            )
        elif cell.row == 4:
            prev_cell = ws.cell(3, cell.col_idx)
            first_value = prev_cell.value
            second_value = cell.value
            if first_value == second_value:
                prev_cell.fill = PatternFill(
                    start_color="78716c", end_color="78716c", fill_type="solid"
                )
                cell.fill = PatternFill(
                    start_color="78716c", end_color="78716c", fill_type="solid"
                )
            else:
                cell.fill = PatternFill(
                    start_color="22c55e", end_color="22c55e", fill_type="solid"
                )

ws.row_dimensions[1].height = 50
ws.freeze_panes = "D5"
wb.save("Test_sheet.xlsx")
wb.close()
